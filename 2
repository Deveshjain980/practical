#2
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler


iris = load_iris()
X, y = iris.data, iris.target


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

model = LogisticRegression(max_iter=200)
model.fit(X_train, y_train)

y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)

hyperparams = [0.01, 0.1, 1, 10]
results = []

for i, c in enumerate(hyperparams, start=1):
    model = LogisticRegression(C=c, max_iter=200)
    model.fit(X_train, y_train)
    acc = accuracy_score(y_test, model.predict(X_test))
    results.append((f"model_v{i}", c, acc))
    print(f"model_v{i} | C={c} | Accuracy={acc:.4f}")
import pandas as pd

df_results = pd.DataFrame(results, columns=["Model_Version", "C_Value", "Accuracy"])
print(df_results)
df_results.to_csv("model_results.csv", index=False)

import joblib
import os
from sklearn.linear_model import LogisticRegression

# Create models folder if it doesn't exist
os.makedirs("models", exist_ok=True)

for i, c in enumerate(hyperparams, start=1):
    model = LogisticRegression(C=c, max_iter=200)
    model.fit(X_train, y_train)
    joblib.dump(model, f"models/model_v{i}.pkl")
    print(f"Saved models/model_v{i}.pkl")
